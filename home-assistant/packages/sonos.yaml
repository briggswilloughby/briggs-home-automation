# =============================================================================
# PACKAGE: sonos.yaml
# PURPOSE: Sonos helpers and presets (Family Room, Kitchen, Bar, Patio, Roam2)
# ISSUE: #TBD
# DEPENDS ON:
#   - media_player.family_room, media_player.kitchen, media_player.bar
#   - media_player.patio, media_player.roam2
# TESTED ON: Home Assistant Core 2025.8.3 (Container), Sonos S2 16.2
# NOTES:
#   - YAML uses `service:` for calls (UI label "Actions" is just naming).
#   - Grouping uses media_player.join/unjoin per HA 2025.8.3 behavior.
#   - Snapshots/restores call sonos.snapshot/sonos.restore with with_group: true.
#   - Move: promote DEST to coordinator, unjoin SOURCE, then join SOURCEâ†’DEST.
# =============================================================================

homeassistant:
  customize:
    script.tv_plus_kitchen:
      google_assistant: true
      google_assistant_name: "Group TV and Kitchen"
      google_assistant_aliases:
        - "Connect TV to kitchen speaker"
        - "Join family room with kitchen"
        - "Group TV with kitchen Sonos"
    script.tv_plus_bar:
      google_assistant: true
      google_assistant_name: "Group TV and Bar"
      google_assistant_aliases:
        - "Connect TV to bar speaker"
        - "Join family room with bar"
        - "Group TV with bar Sonos"
    script.tv_plus_patio:
      google_assistant: true
      google_assistant_name: "Group TV and Patio"
      google_assistant_aliases:
        - "Connect TV to patio speaker"
        - "Join family room with patio"
        - "Group TV with patio Sonos"
    script.tv_whole_house:
      google_assistant: true
      google_assistant_name: "TV Whole House"
      google_assistant_aliases:
        - "Play TV everywhere"
        - "Whole house TV audio"
        - "Group all Sonos for TV"
    script.sonos_ungroup_all:
      google_assistant: true
      google_assistant_name: "Ungroup All Sonos"
      google_assistant_aliases:
        - "Disconnect all Sonos"
        - "Clear every Sonos group"
        - "Ungroup the speakers"
    script.unjoin_kitchen:
      google_assistant: true
      google_assistant_name: "Ungroup Kitchen Sonos"
      google_assistant_aliases:
        - "Disconnect kitchen speaker"
        - "Kitchen speaker solo"
        - "Ungroup kitchen speaker"
    script.unjoin_bar:
      google_assistant: true
      google_assistant_name: "Ungroup Bar Sonos"
      google_assistant_aliases:
        - "Disconnect bar speaker"
        - "Bar speaker solo"
        - "Ungroup bar speaker"
    script.unjoin_patio:
      google_assistant: true
      google_assistant_name: "Ungroup Patio Sonos"
      google_assistant_aliases:
        - "Disconnect patio speaker"
        - "Patio speaker solo"
        - "Ungroup patio speaker"
    script.unjoin_roam2:
      google_assistant: true
      google_assistant_name: "Ungroup Roam Sonos"
      google_assistant_aliases:
        - "Disconnect roam speaker"
        - "Roam speaker solo"
        - "Ungroup roam speaker"
    script.move_tv_to_kitchen:
      google_assistant: true
      google_assistant_name: "Move TV to Kitchen"
      google_assistant_aliases:
        - "Send TV audio to kitchen"
        - "Play TV on kitchen speaker"
        - "Move family room audio to kitchen"
    script.move_kitchen_to_tv:
      google_assistant: true
      google_assistant_name: "Move Kitchen to TV"
      google_assistant_aliases:
        - "Bring kitchen audio to TV"
        - "Move kitchen music to family room"
        - "Send kitchen speaker to TV"
    script.move_tv_to_bar:
      google_assistant: true
      google_assistant_name: "Move TV to Bar"
      google_assistant_aliases:
        - "Send TV audio to bar"
        - "Play TV on bar speaker"
        - "Move family room audio to bar"
    script.move_bar_to_tv:
      google_assistant: true
      google_assistant_name: "Move Bar to TV"
      google_assistant_aliases:
        - "Bring bar music to TV"
        - "Move bar speaker to family room"
        - "Send bar audio to TV"
    script.move_tv_to_patio:
      google_assistant: true
      google_assistant_name: "Move TV to Patio"
      google_assistant_aliases:
        - "Send TV audio to patio"
        - "Play TV on patio speaker"
        - "Move family room audio to patio"
    script.move_patio_to_tv:
      google_assistant: true
      google_assistant_name: "Move Patio to TV"
      google_assistant_aliases:
        - "Bring patio music to TV"
        - "Move patio speaker to family room"
        - "Send patio audio to TV"
    script.sonos_mute_all:
      google_assistant: true
      google_assistant_name: "Mute All Sonos"
      google_assistant_aliases:
        - "Mute every Sonos speaker"
        - "Silence all Sonos"
        - "Mute the house speakers"
    script.sonos_unmute_all:
      google_assistant: true
      google_assistant_name: "Unmute All Sonos"
      google_assistant_aliases:
        - "Unmute every Sonos speaker"
        - "Restore Sonos sound"
        - "Turn the speakers back on"
    script.sonos_volume_up_all:
      google_assistant: true
      google_assistant_name: "Sonos Volume Up"
      google_assistant_aliases:
        - "Increase all Sonos volume"
        - "Sonos louder"
        - "Raise whole house volume"
    script.sonos_volume_down_all:
      google_assistant: true
      google_assistant_name: "Sonos Volume Down"
      google_assistant_aliases:
        - "Decrease all Sonos volume"
        - "Sonos softer"
        - "Lower whole house volume"
    script.sonos_volume_baseline_all:
      google_assistant: true
      google_assistant_name: "Reset Sonos Volume"
      google_assistant_aliases:
        - "Set all Sonos to baseline"
        - "Normalize Sonos volume"
        - "Reset the speaker volumes"

script:

  # ---------- GENERIC HELPERS ----------
  sonos_snapshot:
    alias: "Sonos - Snapshot"
    mode: restart
    fields:
      players:
        description: One or more media_player.*
    sequence:
      - variables:
          plist: >
            {{ players if players is iterable and players is not string else [players] }}
      - repeat:
          for_each: "{{ plist }}"
          sequence:
            - service: sonos.snapshot
              target: { entity_id: "{{ repeat.item }}" }
              data: { with_group: true }

  sonos_restore_snapshot:
    alias: "Sonos - Restore Snapshot"
    mode: restart
    fields:
      players:
        description: One or more media_player.*
    sequence:
      - variables:
          plist: >
            {{ players if players is iterable and players is not string else [players] }}
      - repeat:
          for_each: "{{ plist }}"
          sequence:
            - service: sonos.restore
              target: { entity_id: "{{ repeat.item }}" }
              data: { with_group: true }

  sonos_play:
    alias: "Sonos - Play Favorite/URI"
    mode: restart
    fields:
      player:
        example: media_player.family_room
      favorite:
        description: Sonos favorite name (optional)
      uri:
        description: Direct stream/Spotify URI (optional)
      volume:
        description: Optional volume_level 0.0..1.0
    sequence:
      - choose:
          - conditions: "{{ volume is defined }}"
            sequence:
              - service: media_player.volume_set
                target: { entity_id: "{{ player }}" }
                data: { volume_level: "{{ volume|float }}" }
      - choose:
          - conditions: "{{ favorite is defined and favorite|length > 0 }}"
            sequence:
              - service: media_player.select_source
                target: { entity_id: "{{ player }}" }
                data: { source: "{{ favorite }}" }
        default:
          - choose:
              - conditions: "{{ uri is defined and uri|length > 0 }}"
                sequence:
                  - service: media_player.play_media
                    target: { entity_id: "{{ player }}" }
                    data:
                      media_content_id: "{{ uri }}"
                      media_content_type: music

  sonos_relative_volume:
    alias: "Sonos - Relative Volume"
    mode: single
    fields:
      player:
        example: media_player.family_room
      delta:
        description: "+/- change (0.07 or 7 for 7%)"
    sequence:
      - variables:
          cur: "{{ state_attr(player,'volume_level')|float(0.3) }}"
          step: >
            {% set d = delta %}
            {% if d is number %}{{ d if d <= 1 else (d/100) }}
            {% else %}{{ (d|float(7))/100 }}{% endif %}
          newv: "{{ [1, [0, cur + step]|max ]|min }}"
      - service: media_player.volume_set
        target: { entity_id: "{{ player }}" }
        data: { volume_level: "{{ newv }}" }

  sonos_apply_baseline:
    alias: "Sonos - Apply Baseline Volume"
    mode: parallel
    fields:
      players:
        description: Optional media_player.* or list to normalize (defaults to all zones)
      volume:
        description: Baseline volume_level (0.0-1.0, default 0.15)
    sequence:
      - variables:
          all_players:
            - media_player.family_room
            - media_player.kitchen
            - media_player.bar
            - media_player.patio
            - media_player.roam2
          raw: "{{ players | default(all_players) }}"
          plist: >
            {{ raw if raw is iterable and raw is not string else [raw] }}
          base: "{{ (volume | default(0.15)) | float }}"
      - repeat:
          for_each: "{{ plist }}"
          sequence:
            - service: media_player.volume_set
              target: { entity_id: "{{ repeat.item }}" }
              data: { volume_level: "{{ base }}" }

  sonos_volume_up_all:
    alias: "Sonos - Volume Up All"
    mode: parallel
    sequence:
      - variables:
          targets:
            - media_player.family_room
            - media_player.kitchen
            - media_player.bar
            - media_player.patio
            - media_player.roam2
      - repeat:
          for_each: "{{ targets }}"
          sequence:
            - service: script.sonos_relative_volume
              data:
                player: "{{ repeat.item }}"
                delta: 0.05

  sonos_volume_down_all:
    alias: "Sonos - Volume Down All"
    mode: parallel
    sequence:
      - variables:
          targets:
            - media_player.family_room
            - media_player.kitchen
            - media_player.bar
            - media_player.patio
            - media_player.roam2
      - repeat:
          for_each: "{{ targets }}"
          sequence:
            - service: script.sonos_relative_volume
              data:
                player: "{{ repeat.item }}"
                delta: -0.05

  sonos_volume_baseline_all:
    alias: "Sonos - Volume Baseline All"
    mode: restart
    sequence:
      - service: script.sonos_apply_baseline

  sonos_move:
    alias: "Sonos - Move Playback"
    mode: restart
    fields:
      source:
        description: media_player.* (current playback)
      dest:
        description: media_player.* (destination; becomes coordinator)
      settle_ms:
        description: Small settle delay (ms) between steps
        default: 400
    sequence:
      - variables:
          _source: "{{ source }}"
          _dest: "{{ dest }}"
          _settle: "{{ (settle_ms | default(400) | int) / 1000 }}"
      # 1) Promote DEST to its own coordinator (safe if already solo)
      - service: media_player.unjoin
        target: { entity_id: "{{ _dest }}" }
      - delay: { seconds: "{{ _settle }}" }
      # 2) Unjoin SOURCE from any prior group
      - service: media_player.unjoin
        target: { entity_id: "{{ _source }}" }
      - delay: { seconds: "{{ _settle }}" }
      # 3) Join SOURCE into DEST's group (DEST remains coordinator)
      - service: media_player.join
        target: { entity_id: "{{ _dest }}" }     # coordinator/master
        data:
          group_members:
            - "{{ _source }}"                    # member to add
      - wait_template: >
          {{ state_attr(_dest, 'group_members') is defined
             and _source in state_attr(_dest, 'group_members') }}
        timeout: "00:00:03"
        continue_on_timeout: true

  sonos_group_with:
    alias: "Sonos - Group With"
    mode: restart
    fields:
      coordinator:
        example: media_player.family_room
      members:
        description: List of media_player.* to add
    sequence:
      - variables:
          add_list: >
            {{ members if members is iterable and members is not string else [members] }}
      - repeat:
          for_each: "{{ add_list }}"
          sequence:
            - service: media_player.join
              target: { entity_id: "{{ coordinator }}" }   # coordinator/master
              data:
                group_members:
                  - "{{ repeat.item }}"            # members to add
      - wait_template: >
          {{ state_attr(coordinator, 'group_members') is defined
             and (add_list | select('in', state_attr(coordinator, 'group_members')) | list | length)
                 == (add_list | length) }}
        timeout: "00:00:03"
        continue_on_timeout: true

  sonos_ungroup_all:
    alias: "Sonos - Ungroup All"
    mode: parallel
    sequence:
      - service: media_player.unjoin
        target:
          entity_id:
            - media_player.family_room
            - media_player.kitchen
            - media_player.bar
            - media_player.patio
            - media_player.roam2

  sonos_clamp_volume:
    alias: "Sonos - Clamp Volume"
    mode: parallel
    fields:
      player:
        example: media_player.family_room
      max_level:
        example: 0.20
    sequence:
      - variables:
          cur: "{{ state_attr(player, 'volume_level') | float(0) }}"
          maxv: "{{ max_level | float(0.2) }}"
          newv: "{{ [cur, maxv] | min }}"
      - choose:
          - conditions: "{{ newv < cur }}"
            sequence:
              - service: media_player.volume_set
                target: { entity_id: "{{ player }}" }
                data: { volume_level: "{{ newv }}" }

  sonos_mute_all:
    alias: "Sonos - Mute All"
    mode: parallel
    sequence:
      - service: media_player.volume_mute
        target:
          entity_id:
            - media_player.family_room
            - media_player.kitchen
            - media_player.bar
            - media_player.patio
            - media_player.roam2
        data: { is_volume_muted: true }

  sonos_unmute_all:
    alias: "Sonos - Unmute All"
    mode: parallel
    sequence:
      - service: media_player.volume_mute
        target:
          entity_id:
            - media_player.family_room
            - media_player.kitchen
            - media_player.bar
            - media_player.patio
            - media_player.roam2
        data: { is_volume_muted: false }

  sonos_announce:
    alias: "Sonos - Announce"
    mode: restart
    fields:
      players:
        description: One or more media_player.*
      message:
        description: Text to speak
      volume:
        description: Optional temp volume (0.0..1.0)
      tts_service:
        description: TTS service (default tts.google_translate_say)
    sequence:
      - variables:
          plist: >
            {{ players if players is iterable and players is not string else [players] }}
          tts: "{{ tts_service if tts_service is defined else 'tts.google_translate_say' }}"
          announce_target: "{{ plist[0] if plist|length > 0 else none }}"
      - repeat:
          for_each: "{{ plist }}"
          sequence:
            - service: sonos.snapshot
              target: { entity_id: "{{ repeat.item }}" }
              data: { with_group: true }
      - choose:
          - conditions: "{{ volume is defined }}"
            sequence:
              - repeat:
                  for_each: "{{ plist }}"
                  sequence:
                    - service: media_player.volume_set
                      target: { entity_id: "{{ repeat.item }}" }
                      data: { volume_level: "{{ volume|float }}" }
      - choose:
          - conditions: "{{ announce_target is not none }}"
            sequence:
              - service: "{{ tts }}"
                data:
                  entity_id: "{{ announce_target }}"
                  message: "{{ message }}"
      - delay: "00:00:04"
      - repeat:
          for_each: "{{ plist }}"
          sequence:
            - service: sonos.restore
              target: { entity_id: "{{ repeat.item }}" }
              data: { with_group: true }

  # ---------- GROUP PRESETS / TRANSFERS ----------
  tv_plus_kitchen:
    alias: "TV and Kitchen"
    mode: single
    sequence:
      - service: script.sonos_group_with
        data:
          coordinator: media_player.family_room
          members: [media_player.kitchen]
      - service: script.sonos_apply_baseline
        data:
          players: media_player.kitchen

  tv_plus_bar:
    alias: "TV and Bar"
    mode: single
    sequence:
      - service: script.sonos_group_with
        data:
          coordinator: media_player.family_room
          members: [media_player.bar]
      - service: script.sonos_apply_baseline
        data:
          players: media_player.bar

  tv_plus_patio:
    alias: "TV and Patio"
    mode: single
    sequence:
      - service: script.sonos_group_with
        data:
          coordinator: media_player.family_room
          members: [media_player.patio]
      - service: script.sonos_apply_baseline
        data:
          players: media_player.patio

  tv_whole_house:
    alias: "TV Whole House"
    mode: single
    sequence:
      - service: script.sonos_group_with
        data:
          coordinator: media_player.family_room
          members:
            - media_player.kitchen
            - media_player.bar
            - media_player.patio
            - media_player.roam2
      - service: script.sonos_apply_baseline
        data:
          players:
            - media_player.kitchen
            - media_player.bar
            - media_player.patio
            - media_player.roam2

  move_tv_to_kitchen:
    alias: "TV in Kitchen"
    mode: single
    sequence:
      - choose:
          - conditions: "{{ state_attr('media_player.family_room', 'source') == 'TV' }}"
            sequence:
              - service: script.tv_plus_kitchen
        default:
          - service: script.sonos_move
            data: { source: media_player.family_room, dest: media_player.kitchen }

  move_kitchen_to_tv:
    alias: "Move Kitchen to TV"
    mode: single
    sequence:
      - service: script.sonos_move
        data: { source: media_player.kitchen, dest: media_player.family_room }

  move_tv_to_bar:
    alias: "Move TV to Bar"
    mode: single
    sequence:
      - service: script.sonos_move
        data: { source: media_player.family_room, dest: media_player.bar }

  move_bar_to_tv:
    alias: "Move Bar to TV"
    mode: single
    sequence:
      - service: script.sonos_move
        data: { source: media_player.bar, dest: media_player.family_room }

  move_tv_to_patio:
    alias: "Move TV to Patio"
    mode: single
    sequence:
      - service: script.sonos_move
        data: { source: media_player.family_room, dest: media_player.patio }

  move_patio_to_tv:
    alias: "Move Patio to TV"
    mode: single
    sequence:
      - service: script.sonos_move
        data: { source: media_player.patio, dest: media_player.family_room }

  # ---------- UNJOIN ----------
  unjoin_kitchen:
    alias: "Unjoin Kitchen"
    mode: single
    sequence:
      - service: media_player.unjoin
        target: { entity_id: media_player.kitchen }

  unjoin_bar:
    alias: "Unjoin Bar"
    mode: single
    sequence:
      - service: media_player.unjoin
        target: { entity_id: media_player.bar }

  unjoin_patio:
    alias: "Unjoin Patio"
    mode: single
    sequence:
      - service: media_player.unjoin
        target: { entity_id: media_player.patio }

  unjoin_roam2:
    alias: "Unjoin Roam2"
    mode: single
    sequence:
      - service: media_player.unjoin
        target: { entity_id: media_player.roam2 }
