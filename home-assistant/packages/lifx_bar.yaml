# =============================================================================
# PACKAGE: lifx_bar.yaml
# PURPOSE: Stubbed Bar LIFX lighting scenes with voice/pico friendly wrappers
# DEPENDS ON:
#   - light.bar_lifx (primary LIFX fixture or group in the Bar)
# TESTED ON: Home Assistant Core 2025.8.3 (container)
# NOTES:
#   - Scene wrappers intentionally leave light parameters empty so future
#     brightness/color tuning can slot in without breaking GA/Pico bindings.
#   - Extend `input_select.bar_lifx_scene` and duplicate the <<: *bar_lifx_scene
#     block when adding new presets.
# =============================================================================

homeassistant:
  customize:
    # Voice phrases include multiple natural-language variations per request.
    script.bar_lifx_on:
      google_assistant: true
      google_assistant_name: "Bar Lights On"
      google_assistant_aliases:
        - "Turn on bar lights"
        - "Bar lights on"
        - "Switch on bar lighting"
    script.bar_lifx_off:
      google_assistant: true
      google_assistant_name: "Bar Lights Off"
      google_assistant_aliases:
        - "Turn off bar lights"
        - "Bar lights off"
        - "Switch off bar lighting"
    script.bar_lifx_toggle:
      google_assistant: true
      google_assistant_name: "Toggle Bar Lights"
      google_assistant_aliases:
        - "Toggle the bar lights"
        - "Flip bar lighting"
        - "Bar lights toggle"
    script.bar_lifx_scene_bright:
      google_assistant: true
      google_assistant_name: "Bar Lights Bright"
      google_assistant_aliases:
        - "Bar bright scene"
        - "Brighten the bar lights"
        - "Bar lights full brightness"
    script.bar_lifx_scene_relax:
      google_assistant: true
      google_assistant_name: "Bar Lights Relax"
      google_assistant_aliases:
        - "Bar relax scene"
        - "Relax the bar lighting"
        - "Soft bar lights"
    script.bar_lifx_scene_party:
      google_assistant: true
      google_assistant_name: "Bar Lights Party"
      google_assistant_aliases:
        - "Bar party scene"
        - "Party bar lighting"
        - "Bar lights party mode"
    script.bar_lifx_next_scene:
      google_assistant: true
      google_assistant_name: "Bar Lights Next Scene"
      google_assistant_aliases:
        - "Next bar lighting scene"
        - "Cycle bar lights"
        - "Advance bar scene"
    script.bar_lifx_prev_scene:
      google_assistant: true
      google_assistant_name: "Bar Lights Previous Scene"
      google_assistant_aliases:
        - "Previous bar lighting scene"
        - "Back bar lights"
        - "Go back bar scene"

input_select:
  bar_lifx_scene:
    name: Bar LIFX Scene
    options: [bright, relax, party]
    initial: bright

script:

  bar_lifx_apply_scene:
    alias: Bar LIFX - Apply Scene
    mode: restart
    fields:
      scene:
        description: Scene key defined in input_select.bar_lifx_scene
        example: bright
    sequence:
      - variables:
          requested: "{{ (scene | default(states('input_select.bar_lifx_scene'))) | lower }}"
          available: "{{ state_attr('input_select.bar_lifx_scene', 'options') or ['bright','relax','party'] }}"
          target_scene: >-
            {% set opts = available if available is iterable and available|length > 0 else ['bright','relax','party'] %}
            {% if requested in opts %}
              {{ requested }}
            {% else %}
              {{ opts[0] }}
            {% endif %}
      - service: light.turn_on
        target:
          entity_id: light.bar_lifx
      - service: input_select.select_option
        target:
          entity_id: input_select.bar_lifx_scene
        data:
          option: "{{ target_scene }}"

  bar_lifx_scene_bright: &bar_lifx_scene
    alias: Bar LIFX - Scene Bright
    mode: restart
    sequence:
      - service: script.bar_lifx_apply_scene
        data:
          scene: bright

  bar_lifx_scene_relax:
    <<: *bar_lifx_scene
    alias: Bar LIFX - Scene Relax
    sequence:
      - service: script.bar_lifx_apply_scene
        data:
          scene: relax

  bar_lifx_scene_party:
    <<: *bar_lifx_scene
    alias: Bar LIFX - Scene Party
    sequence:
      - service: script.bar_lifx_apply_scene
        data:
          scene: party

  bar_lifx_next_scene:
    alias: Bar LIFX - Next Scene
    mode: single
    sequence:
      - variables:
          order: "{{ state_attr('input_select.bar_lifx_scene', 'options') or ['bright','relax','party'] }}"
          cur: "{{ states('input_select.bar_lifx_scene') }}"
          next_scene: >-
            {% set opts = order if order is iterable and order|length > 0 else ['bright','relax','party'] %}
            {% set total = opts|length %}
            {% if total == 0 %}
              {{ '' }}
            {% else %}
              {% set pos = opts.index(cur) if cur in opts else -1 %}
              {{ opts[(pos + 1) % total] }}
            {% endif %}
      - choose:
          - conditions: "{{ next_scene | length > 0 }}"
            sequence:
              - service: "script.bar_lifx_scene_{{ next_scene }}"

  bar_lifx_prev_scene:
    alias: Bar LIFX - Previous Scene
    mode: single
    sequence:
      - variables:
          order: "{{ state_attr('input_select.bar_lifx_scene', 'options') or ['bright','relax','party'] }}"
          cur: "{{ states('input_select.bar_lifx_scene') }}"
          prev_scene: >-
            {% set opts = order if order is iterable and order|length > 0 else ['bright','relax','party'] %}
            {% set total = opts|length %}
            {% if total == 0 %}
              {{ '' }}
            {% else %}
              {% set pos = opts.index(cur) if cur in opts else 0 %}
              {{ opts[(pos - 1) % total] }}
            {% endif %}
      - choose:
          - conditions: "{{ prev_scene | length > 0 }}"
            sequence:
              - service: "script.bar_lifx_scene_{{ prev_scene }}"

  bar_lifx_on:
    alias: Bar LIFX - On
    mode: restart
    sequence:
      - service: light.turn_on
        target:
          entity_id: light.bar_lifx

  bar_lifx_off:
    alias: Bar LIFX - Off
    mode: restart
    sequence:
      - service: light.turn_off
        target:
          entity_id: light.bar_lifx

  bar_lifx_toggle:
    alias: Bar LIFX - Toggle
    mode: restart
    sequence:
      - service: light.toggle
        target:
          entity_id: light.bar_lifx
